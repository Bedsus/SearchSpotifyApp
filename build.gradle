// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.3.72"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.2.0-alpha04"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects {
    def subprojectName = it.name // remember, “it” refers to the sub-project.
    if (subprojectName == 'app') {
        apply plugin: 'com.android.application'
    } else {
        apply plugin: 'com.android.library'
    }
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
    apply plugin: 'kotlin-kapt'

    android {
        compileSdkVersion 29
        buildToolsVersion "30.0.0"

        defaultConfig {
            minSdkVersion 21
            targetSdkVersion 29
            versionCode 1
            versionName "1.0"

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }

        buildTypes {
            debug {
                buildConfigField "String", "SERVER_URL", '"https://spotify.com/"'
            }
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_1_8.toString()
        }
    }
    dependencies {
        if (subprojectName != 'core') {
            implementation project(':core')
        }

        /** all projects */
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        // androidx
        implementation 'androidx.core:core-ktx:1.3.1'
        implementation 'androidx.appcompat:appcompat:1.1.0'
        implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
        implementation 'androidx.preference:preference:1.1.1'
        implementation 'androidx.fragment:fragment:1.2.5'
        implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
        implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
        implementation 'androidx.navigation:navigation-fragment:2.3.0'
        // material
        implementation 'com.google.android.material:material:1.1.0'
        // lifecycle
        implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
        implementation 'android.arch.lifecycle:extensions:1.1.1'
        implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
        // coroutines
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.6'
        implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
        testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.5'
        // koin
        implementation 'org.koin:koin-android:2.1.5'
        implementation 'org.koin:koin-androidx-scope:2.1.5'
        implementation 'org.koin:koin-androidx-viewmodel:2.1.5'
        implementation 'org.koin:koin-androidx-fragment:2.1.5'
        // retrofit + okhttp
        implementation 'com.squareup.retrofit2:retrofit:2.9.0'
        implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
        implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'
        // shimmer
        implementation 'com.facebook.shimmer:shimmer:0.5.0'
        // padding
        implementation 'androidx.paging:paging-runtime:2.1.2'
        // test
        testImplementation 'junit:junit:4.13'
        androidTestImplementation 'androidx.test.ext:junit:1.1.1'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}